
<launch>
  <!-- camera frame to world frame transformation matrix row-major representation-->
    <!-- <rosparam param = "transformation_cf2wf">[-0.9130, 0, -0.4078, 390.0, 0.4078, 0, -0.9130, 178.0, 0, -1, 0, 350.0, 0,0 , 0, 1]</rosparam> -->
    <rosparam param = "transformation_cf2intermediate_frame">[-1, 0, 0, 280, 0, 0, -1, 410, 0, -1, 0, 340, 0, 0 , 0, 1]</rosparam>
    <rosparam param = "transformation_intermediate_frame2wf">[0.9130, -0.4078, 0, 0, 0.4078, 0.9130, 0, 0, 0, 0, 1, 0, 0,0 , 0, 1]</rosparam>

     <!-- screen parameters - dimensions and angles -->
    <param name="screenAngleInDegrees" type="int" value="45"/>
    <param name="screenHeight" type="double" value="380"/>
    <param name="screenWidth" type="double" value="520"/>
    <param name="screenGap" type="double" value="20"/> <!-- only used when detecting the targets on screen-->

    <!-- screen parameters - for inside/outside check TODO -->

    <!-- world frame to robot frame rotation matrix 
     rotation_wf2rf_ij refers to the entry in row i and column j 
     rotation about Z-axis by -(theta+90) degrees where theta is 44.75 in degrees-->

    <!-- world frame to robot frame transformation matrix row-major representation-->
    <rosparam param = "transformation_wf2rf">[-0.7041, 0.7100, 0, 340, -0.7100, -0.7041, 0, -100, 0, 0, 1, 0, 0,0 , 0, 1]</rosparam>

    <!-- robot parameters - radius for inside/outside check
     FIX IT -->
    <param name="robot_radius" type="double" value="200"/>
  <!--<arg name="value" default="0"/>-->
  <!--<arg name="webcam_num"/>-->
  <!--<param name ="device" value="$(arg webcam_num)" type="int"/>-->
  <!--<node pkg="clm_ros_wrapper" type="clm_ros_wrapper" name="clm_ros_wrapper" output="screen"></node>-->

   <!-- type="int"/> -->
  
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node>

  <node pkg="clm_ros_wrapper" type="scene_publisher" name="scene_publisher" output="screen"> 
    <param name="device_test" type="int" value="0"/>
  </node>

  <node pkg="clm_ros_wrapper" type="clm_ros_wrapper" name="clm_ros_wrapper" output="screen"> 
	 <param name ="device_test" type ="int" value="0"/> 
  </node>

 <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="clm_ros_wrapper/face_image"/>
    <param name="autosize" value="true" />
  </node>

  <node pkg="clm_ros_wrapper" type="find_gazepoint" name="find_gazepoint" output="screen"> 
   <param name="device_test" type="int" value="0"/>
  
  </node>

  <node pkg="clm_ros_wrapper" type="target_detector" name="target_detector" output="screen"> 
   <param name="device_test" type="int" value="0"/>
  </node>

</launch>
